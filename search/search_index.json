{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Machine Learning Algorithms The algorithms and explanations listed here are intended to give a quick overview of how each algorithm works along with code examples to show how you can implement them. Library versions are provided along with the from-scratch implementations. Links to further resources are also given. The following algorithms are available: Linear Regression Logistic Regression Decision Trees Random Forests Support Vector Machines (SVM's) Na\u00efve Bayes k-Nearest Neighbors k-means Principal Component Analysis Neural Networks Linear Regression What is it? How does it work? From scratch implementation Library implementation Example dataset TL;DR Further resources \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] From scratch version print ( \"From scratch version\" ) Library version print ( \"Library version\" ) Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Logistic Regression Decision Trees Random Forests Support Vector Machines (SVM's) Na\u00efve Bayes k-Nearest Neighbors k-means Principal Component Analysis Neural Networks","title":"Machine Learning Algorithms"},{"location":"#machine-learning-algorithms","text":"The algorithms and explanations listed here are intended to give a quick overview of how each algorithm works along with code examples to show how you can implement them. Library versions are provided along with the from-scratch implementations. Links to further resources are also given. The following algorithms are available: Linear Regression Logistic Regression Decision Trees Random Forests Support Vector Machines (SVM's) Na\u00efve Bayes k-Nearest Neighbors k-means Principal Component Analysis Neural Networks","title":"Machine Learning Algorithms"},{"location":"#linear-regression","text":"What is it? How does it work? From scratch implementation Library implementation Example dataset TL;DR Further resources \\[ \\operatorname{ker} f=\\{g\\in G:f(g)=e_{H}\\}{\\mbox{.}} \\] From scratch version print ( \"From scratch version\" ) Library version print ( \"Library version\" ) Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.","title":"Linear Regression"},{"location":"#logistic-regression","text":"","title":"Logistic Regression"},{"location":"#decision-trees","text":"","title":"Decision Trees"},{"location":"#random-forests","text":"","title":"Random Forests"},{"location":"#support-vector-machines-svms","text":"","title":"Support Vector Machines (SVM's)"},{"location":"#naive-bayes","text":"","title":"Na\u00efve Bayes"},{"location":"#k-nearest-neighbors","text":"","title":"k-Nearest Neighbors"},{"location":"#k-means","text":"","title":"k-means"},{"location":"#principal-component-analysis","text":"","title":"Principal Component Analysis"},{"location":"#neural-networks","text":"","title":"Neural Networks"},{"location":"reinforcement-learning/","text":"Bellman Equation Bellman Optimality Equation for state-action value function: \\[ q_*(s, a) = \\mathcal{R}^{a}_{s} + \\gamma \\sum_{s' \\in S}\\mathcal{P}^{a}_{ss'}\\max_{a'}q_*(s',a') \\]","title":"Bellman Equation"},{"location":"reinforcement-learning/#bellman-equation","text":"Bellman Optimality Equation for state-action value function: \\[ q_*(s, a) = \\mathcal{R}^{a}_{s} + \\gamma \\sum_{s' \\in S}\\mathcal{P}^{a}_{ss'}\\max_{a'}q_*(s',a') \\]","title":"Bellman Equation"}]}